// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  username       String    @unique @db.VarChar(100)
  password       String    @db.VarChar(100)
  name           String    @db.VarChar(100)
  token          String?   @db.VarChar(100)
  code           String?   @db.VarChar(100)
  penalized      Boolean?  @db.TinyInt()
  penalized_date DateTime? @db.Date()

  contacts Contact[]
  borrow Borrow[]

  @@map("users")
}

model Contact {
  id         Int     @id @default(autoincrement())
  first_name String  @db.VarChar(100)
  last_name  String  @db.VarChar(100)
  email      String? @db.VarChar(100)
  phone      String? @db.VarChar(20)
  username   String  @db.VarChar(100)

  user    User      @relation(fields: [username], references: [username])
  address Address[]

  @@map("contacts")
}

model Address {
  id          Int     @id @default(autoincrement())
  street      String? @db.VarChar(255)
  city        String? @db.VarChar(100)
  province    String? @db.VarChar(100)
  country     String? @db.VarChar(100)
  postal_code String? @db.VarChar(10)
  contact_id  Int     @db.Int()

  contact Contact @relation(fields: [contact_id], references: [id])

  @@map("address")
}

model Books {
  id     Int     @id @default(autoincrement())
  code   String @db.VarChar(100) @unique
  title  String? @db.VarChar(100)
  author String? @db.VarChar(100)
  stock  Int?    @db.Int()

  borrow Borrow[]

  @@map("books")
}

model Borrow {
  id          Int       @id @default(autoincrement())
  book_code   String   @db.VarChar(100) 
  username    String   @db.VarChar(100)
  return_date DateTime? @db.Date()

  book Books @relation(fields: [book_code], references: [code])
  user User @relation(fields: [username], references: [username])

  @@map("borrow")
}
